"use strict";(self.webpackChunksystem_docs=self.webpackChunksystem_docs||[]).push([[365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||s;return n?r.createElement(d,o(o({ref:t},l),{},{components:n})):r.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:1},o="Scenario",i={unversionedId:"performance-tests/scenario",id:"performance-tests/scenario",title:"Scenario",description:"The crucial part of the system is the Messenger API and the performance tests focus solely on this component. While",source:"@site/docs/performance-tests/1-scenario.md",sourceDirName:"performance-tests",slug:"/performance-tests/scenario",permalink:"/esme/docs/performance-tests/scenario",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Performance tests",permalink:"/esme/docs/category/performance-tests"},next:{title:"Infrastructure",permalink:"/esme/docs/performance-tests/infrastructure"}},c={},p=[],l={toc:p},m="wrapper";function u(e){let{components:t,...s}=e;return(0,a.kt)(m,(0,r.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"scenario"},"Scenario"),(0,a.kt)("p",null,"The crucial part of the system is the Messenger API and the performance tests focus solely on this component. While\nparticipants on mass events using the mobile application can fetch events data and change their personal data, the most\neffort should be put on assuring that in the flood of requests for help, already opened communication with support will\nendure until the organizers can diagnose the problem and take the necessary action."),(0,a.kt)("p",null,"To partially simulate real life scenario, a performance test setup in Golang creates concurrent workers for one\norganizer starting chats and steadily increasing number of participants registering in the system, requesting help,\nwaiting for the chat to begin and then regularly writing messages. For easier debugging, each message sent by the\nparticipant worker is of the form:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Sprintf(\n    "connection %s: message number %d", \n    conn.LocalAddr(), messageNumber,\n)\n')),(0,a.kt)("p",null,"The test counts the numbers of registered participants and started chats, and Unix timestamp of every WebSocket message\nsuccessfully sent by the participants is collected to measure the message rate per second:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func (m *Manager) startMessageRateTracker() {\n    for {\n        select {\n        case <-m.doneChan:\n            log.Println("stopping message rate tracker")\n            return\n        case timeSent := <-m.messageTimeSentChan:\n            m.messageRates[timeSent]++\n        }\n    }\n}\n')),(0,a.kt)("p",null,"Execution stops when the first error occurs and in the end the time series of message rates and the test summary are\nsaved to files."),(0,a.kt)("p",null,"The test can be parameterized with start chat interval ",(0,a.kt)("inlineCode",{parentName:"p"},"sci"),", create participant interval ",(0,a.kt)("inlineCode",{parentName:"p"},"cpi")," and send message\ninterval ",(0,a.kt)("inlineCode",{parentName:"p"},"smi")," where interval represents sleep time of concurrent worker between actions of a given type. Starting the\ntest takes place in the command line in ",(0,a.kt)("inlineCode",{parentName:"p"},"/esme/tests/performance")," directory where the relevant parameters are\npassed as flags representing time durations in milliseconds:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"go run main.go -sci 10 -cpi 20 -smi 100\n")),(0,a.kt)("p",null,"The test uses only the system backend services and does not evaluate the UI behavior during high traffic. However, an\norganizer's overview of created chats and messages and single participant's screen with messages sent during the\nperformance test are shown below:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"organizer overview",src:n(6652).Z,width:"1327",height:"773"}),"\n",(0,a.kt)("img",{alt:"participant screen",src:n(2034).Z,width:"621",height:"1299"})))}u.isMDXComponent=!0},6652:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/organizer_performance_test-f2f737b7a7abdbb4b117f78d4a387dd7.png"},2034:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/participant_performance_test-a27570de5808f0cf1f3e8e96a698123f.png"}}]);